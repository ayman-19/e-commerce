[
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "AddCategory",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CategoryCommand",
        "Type": "TaskFlapKap.DataTransfareObject.Category.CategoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Category.CategoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "AddInvaentory",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "InventoryCommand",
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Products.Endpoints.ProductController",
    "Method": "CreateProduct",
    "RelativePath": "api/Product/CreateProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "product",
        "Type": "TaskFlapKap.DataTransfareObject.Product.Productdto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Products.Endpoints.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/DeleteProduct/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Products.Endpoints.ProductController",
    "Method": "Edit",
    "RelativePath": "api/Product/Edit/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "TaskFlapKap.DataTransfareObject.Product.UpdateProductdto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Products.Endpoints.ProductController",
    "Method": "GetAllProduct",
    "RelativePath": "api/Product/GetAllProduct",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Search",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Products.Endpoints.ProductController",
    "Method": "GetProductById",
    "RelativePath": "api/Product/GetProductById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "ConfirmEmail",
    "RelativePath": "api/User/ConfirmEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "Edit",
    "RelativePath": "api/User/Edit/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "TaskFlapKap.DataTransfareObject.Servicedto.UpdateUserdto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "Login",
    "RelativePath": "api/User/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "login",
        "Type": "TaskFlapKap.DataTransfareObject.Servicedto.Login",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "Register",
    "RelativePath": "api/User/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "register",
        "Type": "TaskFlapKap.DataTransfareObject.Servicedto.Register",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "ResetPassword",
    "RelativePath": "api/User/ResetPassword",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "TaskFlapKap.DataTransfareObject.Servicedto.ResetPassworddto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.Users.Endpoints.UserController",
    "Method": "SendCodeToResetPassword",
    "RelativePath": "api/User/SendCodeToResetPassword",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.VendingMachine.Endpoints.VendingMachineController",
    "Method": "Buy",
    "RelativePath": "api/VendingMachine/Buy",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "buys",
        "Type": "System.Collections.Generic.List\u00601[[TaskFlapKap.DataTransfareObject.Product.BuyProductdto, TaskFlapKap.DataTransfareObject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.VendingMachine.Endpoints.VendingMachineController",
    "Method": "Deposit",
    "RelativePath": "api/VendingMachine/Deposit/{deposit}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deposit",
        "Type": "System.Double",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "TaskFlapKap.presentation.Controllers.VendingMachine.Endpoints.VendingMachineController",
    "Method": "Rest",
    "RelativePath": "api/VendingMachine/Rest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "DeleteCategory/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Category.CategoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "DeleteInventory/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "GetAllCategory",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TaskFlapKap.DataTransfareObject.Category.CategoryQuery, TaskFlapKap.DataTransfareObject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "GetAllInventory",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[TaskFlapKap.DataTransfareObject.Inventories.InventoryQuery, TaskFlapKap.DataTransfareObject, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "GetCategory/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Category.CategoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "GetInventorybyid/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "UpdateCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "UpdateCategoryCommand",
        "Type": "TaskFlapKap.DataTransfareObject.Category.UpdateCategoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Category.CategoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  },
  {
    "ContainingType": "FastEndpoints.MainExtensions\u002B\u003C\u003Ec",
    "Method": "\u003CMapFastEndpoints\u003Eb__2_0",
    "RelativePath": "UpdateInventory/{id}",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "InventoryCommand",
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TaskFlapKap.DataTransfareObject.Inventories.InventoryQuery",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 403
      }
    ]
  }
]